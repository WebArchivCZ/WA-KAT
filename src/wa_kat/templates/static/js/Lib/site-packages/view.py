#! /usr/bin/env python
# -*- coding: utf-8 -*-
#
# Interpreter version: python 2.7
#
# Imports =====================================================================
from browser import document

from components import LogView
from components import ProgressBar
from components import UrlBoxError
from components import ISSNBoxError

from components import UserKeywordHandler
from components import AlephKeywordHandler
from components import AanalysisKeywordHandler

from components import InputController

from descriptors import StandardElDescriptor
from descriptors import ConspectDescriptor
from descriptors import AnnotationDescriptor
from descriptors import PeriodicityDescriptor

from publisher_switcher import PublisherDescriptor


# Functions & classes =========================================================
class View(object):
    url = StandardElDescriptor(document["url"])
    issn = StandardElDescriptor(document["issn"])
    title = StandardElDescriptor(document["title"])
    creation_date = StandardElDescriptor(document["creation_date"])
    author = StandardElDescriptor(document["author"])
    publisher = PublisherDescriptor()
    place = StandardElDescriptor(document["place"])
    language = StandardElDescriptor(document["lang"])
    conspect = ConspectDescriptor()
    annotation = AnnotationDescriptor(document["annotation"])
    periodicity = PeriodicityDescriptor(document["periode"])

    def __init__(self):
        # all kind of progress bars and error boxes
        self.log_view = LogView
        self.progress_bar = ProgressBar
        self.urlbox_error = UrlBoxError
        self.issnbox_error = ISSNBoxError
        self.user_kw_handler = UserKeywordHandler
        self.aleph_kw_handler = AlephKeywordHandler
        self.analysis_kw_handler = AanalysisKeywordHandler

        self._property_list = [
            "url",
            "issn",
            "title",
            "creation_date",
            "author",
            "publisher",
            "place",
            "language",
            "conspect",
            "annotation",
            "periodicity",
            "keywords",
        ]

    def reset(self):
        self.progress_bar.reset()
        self.progress_bar.show([0, 0])
        self.urlbox_error.reset()
        self.issnbox_error.reset()

        InputController._reset_typeaheads()

    @property
    def keywords(self):
        dataset = [
            self.aleph_kw_handler.keywords,
            self.user_kw_handler.keywords,
            self.analysis_kw_handler.keywords,
        ]

        return sum(dataset, [])  # flattened dataset

    def get_all_properties(self):
        properties = {
            prop_name: getattr(self, prop_name)
            for prop_name in self._property_list
        }

        return properties

    def validate(self):
        properties = (
            getattr(self.__class__, prop)
            for prop in self._property_list
            if hasattr(self.__class__, prop)
        )

        all_valid = True
        for prop in properties:
            if hasattr(prop, "validate"):
                # oh for fucks sake, brython has broken parser and return in
                # prop.validate() will also return from this function
                result = prop.validate()
                all_valid = all_valid and result

        return all_valid


ViewController = View()
